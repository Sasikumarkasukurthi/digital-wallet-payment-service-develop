## micro service configuration
product=DIGITAL-WALLET
servicename=digital-wallet-payment-services
server.servlet.context-path=/digital-wallet/digital-wallet-payment-services
spring.application.name=digital-wallet-payment-services

## spring boot tomcat configuration
JAVA_OPTS=${JAVA_OPTS}
server.port=${SERVER_PORT}
server.host=${SERVER_HOST}
hostidentifier=${HOST_IDENTIFIER}
DOMAIN=${DOMAIN}


server.tomcat.basedir=${TOMCAT_BASE}
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS}
server.tomcat.max-threads=${TOMCAT_MAX_THREADS}
server.tomcat.min-spare-threads=${TOMCAT_MIN_SPARE_THREADS}

# logging
LOG4J_HOME=${TOMCAT_BASE}/logs
logging.level.org.springframework.data=${LOG_LEVEL}

#RancherConfigDirectory
config.dir=${CONFIG_DIR}
config.dir.name =diwa-backend-service
config.version=${CONFIG_VERSION}

# spring boot tomcat access logs
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=${TOMCAT_BASE}/logs
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.pattern=%h %p %l %u %t %D "%r" %s %b %T
server.tomcat.accesslog.rotate=false

# service database
spring.data.mongodb.uri=${MONGODB_URI}

protocol=http

schemaFile=${SCHEMA_FILE}



tenant=${TENANT}
version=${VERSION}


# Spring boot Jackson properties.
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

#SSO settings




management.endpoints.web.exposure.include=health,info



resource.bundle.file.path=
state.machine.file.path=

rest.connection.request.timeout = 20000
rest.connect.timeout = 20000
rest.socket.timeout = 20000
rest.max.total = 200

REDIS_HOST=${REDIS_HOST}
REDIS_PORT=${REDIS_PORT}
REDIS_PASSWORD=${REDIS_PASSWORD}
REDIS_GET_INTERVAL_TIME=500
REDIS_RECEIVE_TIME_OUT=9223372036854775807

BASE_URL=${BASE_URL}
DAP_URL=${DAP_URL}

BALKAN_PASSWORD=${BALKAN_PASSWORD}
master.data.url=${MASTER_DATA_HOST}
IS_SCHEDULER_ACTIVE=${IS_SCHEDULER_ACTIVE}
IS_CATEGORY_DUPLICATE_CHECK=${IS_CATEGORY_DUPLICATE_CHECK}
AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET}
AUTH_USERNAME=${AUTH_USERNAME}
AUTH_PASSWORD=${AUTH_PASSWORD}

CURRENCY=${CURRENCY}
STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}


elasticsearch.enabled=true
elasticsearch.host.urls=${ELASTICSEARCH_HOST}
elasticsearch.indexNames.csrGlobalSearch=csr_global_customer_search
elasticsearch.searchTemplates.csrGlobalSearch=csrGlobalSearchTemplate
elasticsearch.connectionTimeout=5000
elasticsearch.socketTimeout=60000
DMLD_SERVICE_REQUEST_CATEGORY=${DMLD_SERVICE_REQUEST_CATEGORY}

spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
dclm.kafka.consumer-group=${DCLM_KAFKA_CONSUMER_GROUP}
kafka.consumer-group.unique=${KAFKA_CONSUMER_GROUP_UNIQUE:true}
KAFKA_TOPIC=${KAFKA_TOPIC}

zeebe.client.broker.contactPoint=192.168.228.127:46500
zeebe.client.security.plaintext=true

#spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
#dclm.kafka.consumer-group=${DCLM_KAFKA_CONSUMER_GROUP}
